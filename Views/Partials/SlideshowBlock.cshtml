﻿
@inject IPublishedValueFallback publishedValueFallback

@model SlideshowBlock

 @{
    var slides = Model.SlidePicker
        .OfType<IPublishedContent>()
        .Select(p => new SlideshowPage(p, publishedValueFallback))
        .ToList();
}


<div id="myCarousel" class="carousel slide mb-6" data-bs-ride="carousel">
     <div class="carousel-indicators">
        @for (int i = 0; i < slides.Count(); i++)
        {
            var active = (i == 0) ? "active" : null;
            var ariaCurrent = (i == 0) ? "true" : null;
                
            <button type="button" data-bs-target="#myCarousel" data-bs-slide-to="@i" class="@active" 
            aria-label="Slide @(i+1)" aria-current="@ariaCurrent"></button>     
        }            
    </div>
    <div class="carousel-inner">
        @for (int i = 0; i < slides.Count(); i++)
        {
            var active = (i == 0) ? "active" : null;
                
            <div class="carousel-item @active">
                    <img src="@slides[i].Url()" class="carousel-poster" />
                    <div class="container">
                        <div class="carousel-caption">
                            <h1>Example headline.</h1>
                            <p class="opacity-75">Some representative placeholder content for the 
                                first slide of the carousel.</p>
                            <p><a class="btn btn-lg btn-primary" href="#">Sign up today</a></p>
                        </div>
                    </div>
                </div>
        }
    </div> 
    <button class="carousel-control-prev" type="button" data-bs-target="#myCarousel" data-bs-slide="prev">
        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Previous</span>
    </button>
    <button class="carousel-control-next" type="button" data-bs-target="#myCarousel" data-bs-slide="next">
        <span class="carousel-control-next-icon" aria-hidden="true"></span>
        <span class="visually-hidden">Next</span>
    </button>
</div>